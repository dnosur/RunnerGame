using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Unity.VisualScripting;
using UnityEngine;

public class RoadController : MonoBehaviour
{
    [Header("Roads")]

    [SerializeField] List<GameObject> RoadPrefabs; //??? ??????
                     List<GameObject> RoadMap; //??????? ?????? ?? ?????

    [Header("MenuController")]
    [SerializeField] MenuController menuController;

    [Header("Player")]
    [SerializeField] PlayerController playerController;

    System.Random random;

    // Start is called before the first frame update
    void Start()
    {
        random = new System.Random();
        RoadMap = new List<GameObject>();

        StartCoroutine(SpawnCorutine(RoadPrefabs[GetObjectToSpawnId()]));
        StartCoroutine(SpawnCorutine(RoadPrefabs[GetObjectToSpawnId()]));
    }

    // Update is called once per frame
    void Update()
    {

    }

    private void FixedUpdate()
    {
        //???? ???? ??????????? ??????
        //???? ????? ????? ?? ?????-?? ?????
        //? ?????? ??????????? ?????? - ??? ?? ??, ?? ??????? ????? ?????
        if (RoadMap.Count != 0 &&
           playerController.GetRoadName().Length > 0 &&
           playerController.GetRoadName() != menuController.GetMenuLocation().name &&
           RoadMap[0].name != playerController.GetRoadName() &&
           RoadMap.FirstOrDefault(obj => obj.name == playerController.GetRoadName()).gameObject != null) {
            Destroy(RoadMap[0]); //??????? ? ????? ???? ?????? ??????
            RoadMap.RemoveAt(0); //??????? ?? ?? ??????? ?????
            StartCoroutine(SpawnCorutine(RoadPrefabs[GetObjectToSpawnId()])); //??????? ????? ??????
        }
    }

    //????????? ??????????? id ??????, ??????? ?? ?????????? ?? ?????
    int GetObjectToSpawnId()
    {
        if (RoadPrefabs.Count == 0) return -1;

        while (true)
        {
            int roadId = random.Next(0, RoadPrefabs.Count);

            if(RoadMap.Count > 0 && RoadMap.LastOrDefault(value => value.name == RoadPrefabs[roadId].name + "(Clone)") != null ) continue;
            return roadId;
        }
    }

    //????? ??????
    IEnumerator SpawnCorutine(GameObject road)
    {
        //??????? ??????
        //???? ? ??? ??? ?? ?????????? ?? ???? ?????? - ?? ??????? ????? 100, 0, 0
        //????? - ????? ????????? ???????????? ??????, ? ????????? ? ???????? x 100
        //?????, ??? ??????? ?????? ? ??? ?????????, ? ?? ??????????!!!
        Vector3 size = road.GetComponent<BoxCollider>().size;
        Vector3 pos;
        if (RoadMap.Count > 0)
        {
            GameObject prev = RoadMap[RoadMap.Count - 1];
            pos = new Vector3(prev.transform.localPosition.x + (prev.GetComponent<BoxCollider>().size.z/2f) + size.z/2f, 0, 0);
        }
        else
        {
            pos = new Vector3(size.z/2.0f, 0, 0);
        }

        //??????? ??????, ? ???????? ? ?????? ???????
        GameObject spawnRoad = Instantiate(road, transform);
        spawnRoad.transform.localPosition = pos;

        RoadMap.Add(spawnRoad);

        yield return null;
    }

    public void ClearMap()
    {
        foreach(GameObject road in RoadMap)
        {
            try
            {
                Destroy(road);
            }
            catch (Exception) { }
        }

        RoadMap.Clear();

        StartCoroutine(SpawnCorutine(RoadPrefabs[GetObjectToSpawnId()]));
        StartCoroutine(SpawnCorutine(RoadPrefabs[GetObjectToSpawnId()]));

        Debug.Log("Cleared map! " + RoadMap.Count);
    }
}
